const test = require('blue-tape');
const measure = require('../../helpers/measure');
const { conv2 } = require('../../../src/matlab/conv2');

const A = {
	data: [
		10, 20, 30, 10, 20, 30, 10, 20, 30,
		40, 50, 60, 40, 50, 60, 40, 50, 60,
		70, 80, 90, 70, 80, 90, 70, 80, 90,
		10, 20, 30, 10, 20, 30, 10, 20, 30,
		40, 50, 60, 40, 50, 60, 40, 50, 60,
		70, 80, 90, 70, 80, 90, 70, 80, 90,
		10, 20, 30, 10, 20, 30, 10, 20, 30,
		40, 50, 60, 40, 50, 60, 40, 50, 60,
		70, 80, 90, 70, 80, 90, 70, 80, 90
	],
	width: 9,
	height: 9
};
const box = {
	data: [
		1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9,
		1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9,
		1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9,
		1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9,
		1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9,
		1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9,
		1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9,
		1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9,
		1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9
	],
	width: 9,
	height: 9
};
const nonBox = {
	data: [
		1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 8, 1 / 9, 1 / 9, 1 / 9, 1 / 9,
		1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 8, 1 / 9, 1 / 9, 1 / 9, 1 / 9,
		1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 8, 1 / 9, 1 / 9, 1 / 9, 1 / 9,
		1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 8, 1 / 9, 1 / 9, 1 / 9, 1 / 9,
		1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 8, 1 / 9, 1 / 9, 1 / 9, 1 / 9,
		1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 8, 1 / 9, 1 / 9, 1 / 9, 1 / 9,
		1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 8, 1 / 9, 1 / 9, 1 / 9, 1 / 9,
		1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 8, 1 / 9, 1 / 9, 1 / 9, 1 / 9,
		1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 8, 1 / 9, 1 / 9, 1 / 9, 1 / 9
	],
	width: 9,
	height: 9
};
const KERNEL = {
	BOX: 'Box kernel',
	NONBOX: 'Non box kernel'
};

test('box kernels should perform better than non box kernels', (t) => {
	measure(t, 'Convolution kernel comparison', false, {
		name: KERNEL.BOX,
		fn: () => conv2(A, box, 'full')
	}, {
		name: KERNEL.NONBOX,
		fn: () => conv2(A, nonBox, 'full')
	});
});
